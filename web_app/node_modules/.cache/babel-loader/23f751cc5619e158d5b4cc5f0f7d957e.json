{"ast":null,"code":"import _classCallCheck from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/davidflores/Documents/office-eye/web_app/src/account/Input.js\";\nimport React, { Component } from 'react';\nimport cx from './InputAssets/classSet';\nimport _ from 'underscore';\nimport PasswordValidator from './InputAssets/PasswordValidator.js';\nimport InputError from './InputAssets/InputError.js';\nimport Icon from './InputAssets/Icon.js';\nimport { Input } from 'antd';\n\nvar Input2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Input2, _Component);\n\n  function Input2(props) {\n    var _this;\n\n    _classCallCheck(this, Input2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Input2).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        value: event.target.value,\n        empty: _.isEmpty(event.target.value)\n      });\n\n      if (_this.props.validator) {\n        _this.checkRules(event.target.value);\n      } // call input's validation method\n\n\n      if (_this.props.validate) {\n        _this.validateInput(event.target.value);\n      } // call onChange method on the parent component for updating it's state\n\n\n      if (_this.props.onChange) {\n        _this.props.onChange(event);\n      }\n    };\n\n    _this.validateInput = function (value) {\n      // trigger custom validation method in the parent component\n      if (_this.props.validate && _this.props.validate(value)) {\n        _this.setState({\n          valid: true,\n          errorVisible: false\n        });\n      } else {\n        _this.setState({\n          valid: false,\n          errorMessage: !_.isEmpty(value) ? _this.props.errorMessage : _this.props.emptyMessage\n        });\n      }\n    };\n\n    _this.componentWillReceiveProps = function (newProps) {\n      // perform update only when new value exists and not empty\n      if (newProps.value) {\n        if (!_.isUndefined(newProps.value) && newProps.value.length > 0) {\n          if (_this.props.validate) {\n            _this.validateInput(newProps.value);\n          }\n\n          _this.setState({\n            value: newProps.value,\n            empty: _.isEmpty(newProps.value)\n          });\n        }\n      }\n    };\n\n    _this.isValid = function () {\n      if (_this.props.validate) {\n        if (_.isEmpty(_this.state.value) || !_this.props.validate(_this.state.value)) {\n          _this.setState({\n            valid: false,\n            errorVisible: true\n          });\n        }\n      }\n\n      return _this.state.valid;\n    };\n\n    _this.handleFocus = function () {\n      _this.setState({\n        focus: true,\n        validatorVisible: true\n      }); // hide error when validator is active\n\n\n      if (_this.props.validator) {\n        _this.setState({\n          errorVisible: false\n        });\n      }\n    };\n\n    _this.handleBlur = function () {\n      _this.setState({\n        focus: false,\n        errorVisible: !_this.state.valid,\n        validatorVisible: false\n      });\n    };\n\n    _this.mouseEnterError = function () {\n      _this.setState({\n        errorVisible: true\n      });\n    };\n\n    _this.hideError = function () {\n      _this.setState({\n        errorVisible: false,\n        validatorVisible: false\n      });\n    };\n\n    _this.checkRules = function (value) {\n      var validData = {\n        minChars: !_.isEmpty(value) ? value.length >= parseInt(_this.state.minCharacters) : false,\n        capitalLetters: !_.isEmpty(value) ? _this.countCapitals(value) : false,\n        numbers: !_.isEmpty(value) ? _this.countNumbers(value) > 0 : false,\n        words: !_.isEmpty(value) ? !_this.checkWords(value) : false\n      };\n      var allValid = validData.minChars && validData.capitalLetters && validData.numbers && validData.words;\n\n      _this.setState({\n        isValidatorValid: validData,\n        allValidatorValid: allValid,\n        valid: allValid\n      });\n    };\n\n    _this.countCapitals = function (value) {\n      return value.replace(/[^A-Z]/g, \"\").length;\n    };\n\n    _this.countNumbers = function (value) {\n      return /\\d/.test(value);\n    };\n\n    _this.checkWords = function (value) {\n      return _.some(_this.state.forbiddenWords, function (word) {\n        return word === value ? true : \"\";\n      });\n    };\n\n    _this.state = {\n      valid: _this.props.isValid && _this.props.isValid() || true,\n      empty: _.isEmpty(_this.props.value),\n      focus: false,\n      value: null,\n      iconsVisible: !_this.props.validator,\n      errorMessage: _this.props.emptyMessage,\n      emptyMessage: _this.props.emptyMessage,\n      validator: _this.props.validator,\n      validatorVisible: false,\n      type: _this.props.type,\n      minCharacters: _this.props.minCharacters,\n      requireCapitals: _this.props.requireCapitals,\n      requireNumbers: _this.props.requireNumbers,\n      forbiddenWords: _this.props.forbiddenWords,\n      isValidatorValid: {\n        minChars: false,\n        capitalLetters: false,\n        numbers: false,\n        words: false,\n        all: false\n      },\n      allValidatorValid: false\n    };\n    return _this;\n  }\n  /*\n  ***************************************************************************************\n  *    Reference\n  *    Title: react-signup-form\n  *    Author: Mikhail Proniushkin\n  *    Access Date: 2018\n  *    Availability: https://github.com/mikepro4/react-signup-form\n  ***************************************************************************************\n  */\n\n\n  _createClass(Input2, [{\n    key: \"render\",\n    value: function render() {\n      var inputGroupClasses = cx({\n        'input_group': true,\n        'input_valid': this.state.valid,\n        'input_error': !this.state.valid,\n        'input_empty': this.state.empty,\n        'input_hasValue': !this.state.empty,\n        'input_focused': this.state.focus,\n        'input_unfocused': !this.state.focus\n      });\n      var validator;\n\n      if (this.state.validator) {\n        validator = React.createElement(PasswordValidator, {\n          ref: \"passwordValidator\",\n          visible: this.state.validatorVisible,\n          name: this.props.text,\n          value: this.state.value,\n          validData: this.state.isValidatorValid,\n          valid: this.state.allValidatorValid,\n          forbiddenWords: this.state.forbiddenWords,\n          minCharacters: this.props.minCharacters,\n          requireCapitals: this.props.requireCapitals,\n          requireNumbers: this.props.requireNumbers,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: inputGroupClasses,\n        style: {\n          border: '1px solid #d9d9d9'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"input_label\",\n        htmlFor: this.props.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"label_text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, this.props.text)), React.createElement(Input, Object.assign({}, this.props, {\n        placeholder: this.props.placeholder,\n        className: \"input\",\n        id: this.props.text,\n        defaultValue: this.props.defaultValue,\n        value: this.state.value,\n        onChange: this.handleChange,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), React.createElement(InputError, {\n        visible: this.state.errorVisible,\n        errorMessage: this.state.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"validationIcons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"input_error_icon\",\n        onMouseEnter: this.mouseEnterError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"circle_error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), \" \"), React.createElement(\"i\", {\n        className: \"input_valid_icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"circle_tick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), \" \")), validator);\n    }\n  }]);\n\n  return Input2;\n}(Component);\n\nexport default Input2;","map":{"version":3,"sources":["/Users/davidflores/Documents/office-eye/web_app/src/account/Input.js"],"names":["React","Component","cx","_","PasswordValidator","InputError","Icon","Input","Input2","props","handleChange","event","setState","value","target","empty","isEmpty","validator","checkRules","validate","validateInput","onChange","valid","errorVisible","errorMessage","emptyMessage","componentWillReceiveProps","newProps","isUndefined","length","isValid","state","handleFocus","focus","validatorVisible","handleBlur","mouseEnterError","hideError","validData","minChars","parseInt","minCharacters","capitalLetters","countCapitals","numbers","countNumbers","words","checkWords","allValid","isValidatorValid","allValidatorValid","replace","test","some","forbiddenWords","word","iconsVisible","type","requireCapitals","requireNumbers","all","inputGroupClasses","text","border","placeholder","defaultValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport cx from './InputAssets/classSet';\nimport _ from 'underscore';\nimport PasswordValidator from './InputAssets/PasswordValidator.js';\nimport InputError from './InputAssets/InputError.js';\nimport Icon from './InputAssets/Icon.js';\nimport { Input } from 'antd';\n\nclass Input2 extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n                valid: (this.props.isValid && this.props.isValid()) || true,\n                empty: _.isEmpty(this.props.value),\n                focus: false,\n                value: null,\n                iconsVisible: !this.props.validator,\n                errorMessage: this.props.emptyMessage,\n                emptyMessage: this.props.emptyMessage,\n                validator: this.props.validator,\n                validatorVisible: false,\n                type: this.props.type,\n                minCharacters: this.props.minCharacters,\n                requireCapitals: this.props.requireCapitals,\n                requireNumbers: this.props.requireNumbers,\n                forbiddenWords: this.props.forbiddenWords,\n                isValidatorValid: {\n                    minChars: false,\n                    capitalLetters: false,\n                    numbers: false,\n                    words: false,\n                    all: false\n                },\n                allValidatorValid: false\n            }\n        }\n\n    /*\n    ***************************************************************************************\n    *    Reference\n    *    Title: react-signup-form\n    *    Author: Mikhail Proniushkin\n    *    Access Date: 2018\n    *    Availability: https://github.com/mikepro4/react-signup-form\n    ***************************************************************************************\n    */\n    handleChange = (event) => {\n        this.setState({\n            value: event.target.value,\n            empty: _.isEmpty(event.target.value)\n        });\n\n        if(this.props.validator) {\n            this.checkRules(event.target.value)\n        }\n\n        // call input's validation method\n        if(this.props.validate) {\n            this.validateInput(event.target.value);\n        }\n\n        // call onChange method on the parent component for updating it's state\n        if(this.props.onChange) {\n            this.props.onChange(event);\n        }\n    };\n\n    validateInput = (value) => {\n        // trigger custom validation method in the parent component\n        if(this.props.validate && this.props.validate(value)){\n            this.setState({\n                valid: true,\n                errorVisible: false\n            });\n        } else {\n            this.setState({\n                valid: false,\n                errorMessage: !_.isEmpty(value) ? this.props.errorMessage : this.props.emptyMessage\n            });\n        }\n    };\n\n    componentWillReceiveProps = (newProps) => {\n        // perform update only when new value exists and not empty\n        if(newProps.value) {\n            if(!_.isUndefined(newProps.value) && newProps.value.length > 0) {\n                if(this.props.validate) {\n                    this.validateInput(newProps.value);\n                }\n                this.setState({\n                    value: newProps.value,\n                    empty: _.isEmpty(newProps.value)\n                });\n            }\n        }\n    };\n\n    isValid = () => {\n        if(this.props.validate) {\n            if(_.isEmpty(this.state.value) || !this.props.validate(this.state.value)) {\n                this.setState({\n                    valid: false,\n                    errorVisible: true\n                });\n            }\n        }\n        return this.state.valid;\n    };\n\n    handleFocus = () =>{\n        this.setState({\n            focus: true,\n            validatorVisible: true\n        });\n\n        // hide error when validator is active\n        if(this.props.validator) {\n            this.setState({\n                errorVisible: false\n            })\n        }\n    };\n\n    handleBlur = () => {\n        this.setState({\n            focus: false,\n            errorVisible: !this.state.valid,\n            validatorVisible: false\n        });\n    };\n\n    mouseEnterError = () =>{\n        this.setState({\n            errorVisible: true\n        });\n    };\n\n    hideError = () =>{\n        this.setState({\n            errorVisible: false,\n            validatorVisible: false\n        });\n    };\n\n    // validator function\n    checkRules = (value) =>{\n        let validData = {\n            minChars: !_.isEmpty(value) ? value.length >= parseInt(this.state.minCharacters): false,\n            capitalLetters: !_.isEmpty(value) ? this.countCapitals(value): false,\n            numbers: !_.isEmpty(value) ? this.countNumbers(value) > 0 : false,\n            words: !_.isEmpty(value) ? !this.checkWords(value) : false\n        };\n        let allValid = (validData.minChars && validData.capitalLetters && validData.numbers && validData.words);\n\n        this.setState({\n            isValidatorValid: validData,\n            allValidatorValid: allValid,\n            valid: allValid\n        })\n    };\n\n    countCapitals = (value) => {\n        return value.replace(/[^A-Z]/g, \"\").length;\n    };\n\n    countNumbers = (value) => {\n        return /\\d/.test(value);\n    };\n\n    checkWords = (value) => {\n        return  _.some(this.state.forbiddenWords, function (word) {\n            return (word === value) ? true : \"\"\n        })\n    };\n\n    render() {\n\n        let inputGroupClasses = cx({\n            'input_group':     true,\n            'input_valid':     this.state.valid,\n            'input_error':     !this.state.valid,\n            'input_empty':     this.state.empty,\n            'input_hasValue':  !this.state.empty,\n            'input_focused':   this.state.focus,\n            'input_unfocused': !this.state.focus\n        });\n\n        let validator;\n\n        if(this.state.validator) {\n            validator =\n                <PasswordValidator\n                    ref=\"passwordValidator\"\n                    visible={this.state.validatorVisible}\n                    name={this.props.text}\n                    value={this.state.value}\n                    validData={this.state.isValidatorValid}\n                    valid={this.state.allValidatorValid}\n                    forbiddenWords={this.state.forbiddenWords}\n                    minCharacters={this.props.minCharacters}\n                    requireCapitals={this.props.requireCapitals}\n                    requireNumbers={this.props.requireNumbers}\n                />\n        }\n\n        return (\n            <div className={inputGroupClasses} style={{border:'1px solid #d9d9d9'}}>\n\n                <label className=\"input_label\" htmlFor={this.props.text} >\n                    <span className=\"label_text\">{this.props.text}</span>\n                </label>\n\n                <Input \n                    {...this.props}\n                    placeholder={this.props.placeholder}\n                    className=\"input\"\n                    id={this.props.text}\n                    defaultValue={this.props.defaultValue}\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    autoComplete=\"off\"\n                />\n\n                <InputError\n                    visible={this.state.errorVisible}\n                    errorMessage={this.state.errorMessage}\n                />\n\n                <div className=\"validationIcons\">\n                    <i className=\"input_error_icon\" onMouseEnter={this.mouseEnterError}> <Icon type=\"circle_error\"/> </i>\n                    <i className=\"input_valid_icon\"> <Icon type=\"circle_tick\"/> </i>\n                </div>\n\n                {validator}\n\n            </div>\n        );\n    }\n\n\n}\nexport default Input2;"]},"metadata":{},"sourceType":"module"}