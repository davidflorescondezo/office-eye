{"ast":null,"code":"function cx(classNames) {\n  var names = '';\n\n  if (typeof classNames == 'object') {\n    for (var name in classNames) {\n      if (!classNames.hasOwnProperty(name) || !classNames[name]) {\n        continue;\n      }\n\n      names += name + ' ';\n    }\n  } else {\n    for (var i = 0; i < arguments.length; i++) {\n      // We should technically exclude 0 too, but for the sake of backward\n      // compat we'll keep it (for now)\n      if (arguments[i] == null) {\n        continue;\n      }\n\n      names += arguments[i] + ' ';\n    }\n  }\n\n  return names.trim();\n}\n\nmodule.exports = cx;","map":{"version":3,"sources":["/Users/davidflores/Documents/office-eye/web_app/src/account/InputAssets/classSet.js"],"names":["cx","classNames","names","name","hasOwnProperty","i","arguments","length","trim","module","exports"],"mappings":"AAAA,SAASA,EAAT,CAAYC,UAAZ,EAAwB;AACpB,MAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAI,OAAOD,UAAP,IAAqB,QAAzB,EAAmC;AAC/B,SAAK,IAAIE,IAAT,IAAiBF,UAAjB,EAA6B;AACzB,UAAI,CAACA,UAAU,CAACG,cAAX,CAA0BD,IAA1B,CAAD,IAAoC,CAACF,UAAU,CAACE,IAAD,CAAnD,EAA2D;AACvD;AACH;;AACDD,MAAAA,KAAK,IAAIC,IAAI,GAAG,GAAhB;AACH;AACJ,GAPD,MAOO;AACH,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACvC;AACA;AACA,UAAIC,SAAS,CAACD,CAAD,CAAT,IAAgB,IAApB,EAA0B;AACtB;AACH;;AACDH,MAAAA,KAAK,IAAII,SAAS,CAACD,CAAD,CAAT,GAAe,GAAxB;AACH;AACJ;;AAED,SAAOH,KAAK,CAACM,IAAN,EAAP;AACH;;AAEDC,MAAM,CAACC,OAAP,GAAiBV,EAAjB","sourcesContent":["function cx(classNames) {\n    let names = '';\n\n    if (typeof classNames == 'object') {\n        for (let name in classNames) {\n            if (!classNames.hasOwnProperty(name) || !classNames[name]) {\n                continue;\n            }\n            names += name + ' ';\n        }\n    } else {\n        for (let i = 0; i < arguments.length; i++) {\n            // We should technically exclude 0 too, but for the sake of backward\n            // compat we'll keep it (for now)\n            if (arguments[i] == null) {\n                continue;\n            }\n            names += arguments[i] + ' ';\n        }\n    }\n\n    return names.trim();\n}\n\nmodule.exports = cx;"]},"metadata":{},"sourceType":"module"}