{"ast":null,"code":"import _classCallCheck from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/davidflores/Documents/office-eye/web_app/src/account/InputAssets/PasswordValidator.js\";\nimport cx from './classSet.js';\nimport React, { Component } from 'react';\nimport Icon from './Icon.js';\n\nvar PasswordValidator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PasswordValidator, _Component);\n\n  function PasswordValidator(props) {\n    var _this;\n\n    _classCallCheck(this, PasswordValidator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PasswordValidator).call(this, props));\n    _this.state = {\n      value: null,\n      minCharacters: _this.props.minCharacters,\n      requireCapitals: _this.props.requireCapitals,\n      requireNumbers: _this.props.requireNumbers,\n      forbiddenWords: _this.props.forbiddenWords,\n      name: _this.props.name\n    };\n    return _this;\n  }\n\n  _createClass(PasswordValidator, [{\n    key: \"render\",\n\n    /*\n    ***************************************************************************************\n    *    Reference\n    *    Title: react-signup-form\n    *    Author: Mikhail Proniushkin\n    *    Access Date: 2019\n    *    Availability: https://github.com/mikepro4/react-signup-form\n    ***************************************************************************************\n    */\n    value: function render() {\n      var validatorClass = cx({\n        'password_validator': true,\n        'visible': this.props.visible,\n        'invisible': !this.props.visible\n      });\n      var forbiddenWords = this.state.forbiddenWords.map(function (word, i) {\n        return React.createElement(\"span\", {\n          key: i,\n          className: \"bad_word\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"\\\"\", word, \"\\\"\");\n      });\n      var validatorTitle;\n\n      if (this.props.valid) {\n        validatorTitle = React.createElement(\"h4\", {\n          className: \"validator_title valid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, this.props.name, \" IS OK\");\n      } else {\n        validatorTitle = React.createElement(\"h4\", {\n          className: \"validator_title invalid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, this.props.name, \" RULES\");\n      }\n\n      return React.createElement(\"div\", {\n        className: validatorClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"validator_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, validatorTitle, React.createElement(\"ul\", {\n        className: \"rules_list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: cx({\n          'valid': this.props.validData.minChars\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon_valid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"circle_tick_filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), \" \"), React.createElement(\"i\", {\n        className: \"icon_invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"circle_error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), \" \"), React.createElement(\"span\", {\n        className: \"error_message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.minCharacters, \" characters minimum\")), React.createElement(\"li\", {\n        className: cx({\n          'valid': this.props.validData.capitalLetters\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon_valid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"circle_tick_filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), \" \"), React.createElement(\"i\", {\n        className: \"icon_invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"circle_error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \" \"), React.createElement(\"span\", {\n        className: \"error_message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Contains at least \", this.state.requireCapitals, \" capital letter\")), React.createElement(\"li\", {\n        className: cx({\n          'valid': this.props.validData.numbers\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon_valid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"circle_tick_filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), \" \"), React.createElement(\"i\", {\n        className: \"icon_invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"circle_error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), \" \"), React.createElement(\"span\", {\n        className: \"error_message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Contains at least \", this.state.requireNumbers, \" number\")), React.createElement(\"li\", {\n        className: cx({\n          'valid': this.props.validData.words\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon_valid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"circle_tick_filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), \" \"), React.createElement(\"i\", {\n        className: \"icon_invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"circle_error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), \" \"), React.createElement(\"span\", {\n        className: \"error_message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Can't be \", forbiddenWords)))));\n    }\n  }]);\n\n  return PasswordValidator;\n}(Component);\n\nexport default PasswordValidator;","map":{"version":3,"sources":["/Users/davidflores/Documents/office-eye/web_app/src/account/InputAssets/PasswordValidator.js"],"names":["cx","React","Component","Icon","PasswordValidator","props","state","value","minCharacters","requireCapitals","requireNumbers","forbiddenWords","name","validatorClass","visible","map","word","i","validatorTitle","valid","validData","minChars","capitalLetters","numbers","words"],"mappings":"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","sourcesContent":["import cx from './classSet.js';\nimport React, { Component } from 'react';\nimport Icon from './Icon.js';\n\nclass PasswordValidator extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: null,\n            minCharacters: this.props.minCharacters,\n            requireCapitals: this.props.requireCapitals,\n            requireNumbers: this.props.requireNumbers,\n            forbiddenWords: this.props.forbiddenWords,\n            name: this.props.name\n        }\n  };\n    /*\n    ***************************************************************************************\n    *    Reference\n    *    Title: react-signup-form\n    *    Author: Mikhail Proniushkin\n    *    Access Date: 2019\n    *    Availability: https://github.com/mikepro4/react-signup-form\n    ***************************************************************************************\n    */\n  render(){\n    let validatorClass = cx({\n      'password_validator':   true,\n      'visible':              this.props.visible,\n      'invisible':            !this.props.visible\n    });\n\n    let forbiddenWords = this.state.forbiddenWords.map(function(word, i) {\n      return (\n        <span key={i} className=\"bad_word\">\n          \"{word}\"\n        </span>\n      )\n    });\n\n    let validatorTitle;\n\n    if(this.props.valid) {\n      validatorTitle = \n        <h4 className=\"validator_title valid\">\n          {this.props.name} IS OK\n        </h4>\n    } else {\n      validatorTitle = \n        <h4 className=\"validator_title invalid\">\n          {this.props.name} RULES\n        </h4>\n    }\n\n    return (\n      <div className={validatorClass}>\n        <div className=\"validator_container\">\n          {validatorTitle}\n            <ul className=\"rules_list\">\n\n                <li className={cx({'valid': this.props.validData.minChars})}>\n                    <i className=\"icon_valid\"> <Icon type=\"circle_tick_filled\"/> </i>\n                    <i className=\"icon_invalid\"> <Icon type=\"circle_error\"/> </i>\n                    <span className=\"error_message\">{this.state.minCharacters} characters minimum</span>\n                </li>\n\n                <li className={cx({'valid': this.props.validData.capitalLetters})}>\n                    <i className=\"icon_valid\"> <Icon type=\"circle_tick_filled\"/> </i>\n                    <i className=\"icon_invalid\"> <Icon type=\"circle_error\"/> </i>\n                    <span className=\"error_message\">Contains at least {this.state.requireCapitals} capital letter</span>\n                </li>\n\n                <li className={cx({'valid': this.props.validData.numbers})}>\n                    <i className=\"icon_valid\"> <Icon type=\"circle_tick_filled\"/> </i>\n                    <i className=\"icon_invalid\"> <Icon type=\"circle_error\"/> </i>\n                    <span className=\"error_message\">Contains at least {this.state.requireNumbers} number</span>\n                </li>\n\n                <li className={cx({'valid': this.props.validData.words})}>\n                    <i className=\"icon_valid\"> <Icon type=\"circle_tick_filled\"/> </i>\n                    <i className=\"icon_invalid\"> <Icon type=\"circle_error\"/> </i>\n                    <span className=\"error_message\">Can't be {forbiddenWords}</span>\n                </li>\n\n            </ul>\n\n        </div>\n      </div>\n    )\n  }\n}\nexport default PasswordValidator;"]},"metadata":{},"sourceType":"module"}