{"ast":null,"code":"import _classCallCheck from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/davidflores/Documents/office-eye/web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/davidflores/Documents/office-eye/web_app/src/pages/Dashboard.js\";\nimport React, { Component } from 'react'; //import Sidebar from '../components/layout/Sidebar.js';\n//import UpcomingList from '../components/UpcomingList.js';\n\nimport Headers from './layout/Header.js';\nimport '../css/Dashboard.css';\nimport { Layout, Menu, Icon, Button } from 'antd';\nimport { Link, Redirect, Route, Switch, Router } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport * as routes from \"../router/routes\";\nimport { auth, database, storage } from '../firebase/firebase';\nimport Graph from \"../account/graph\";\nvar Sider = Layout.Sider,\n    Content = Layout.Content,\n    Header = Layout.Header;\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this2;\n\n    _classCallCheck(this, Dashboard);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n    _this2.state = {\n      thekey: _this2.props.key,\n      //authUser : auth.currentUser,\n      authUser: _this2.props.authUser,\n      selectedKey: '',\n      collapsed: false,\n      authUserDir: auth.currentUser,\n      graphRef: [],\n      employee: ''\n    };\n\n    if (_this2.state.authUserDir) {\n      _this2.userDir = database.ref('/users').child(_this2.state.authUserDir.uid);\n    } //this.enrolRef = database.ref('/users/'+ this.state.userDir + '/enrollment');\n\n\n    _this2.userRef = database.ref('/users').child('Anonymous');\n    return _this2;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      auth.onAuthStateChanged(function (authUser) {\n        authUser ? _this3.setState(function () {\n          return {\n            authUser: authUser\n          };\n        }) : _this3.setState(function () {\n          return {\n            authUser: null\n          };\n        });\n\n        if (authUser) {\n          _this3.userRef = database.ref('users').child(authUser.uid);\n          /*this.enrolRef.on('value',(snapshot) => {\n              var judgeEnrollment = snapshot.numChildren();\n              this.setState({judgeEnrollment});\n           });*/\n\n          _this3.state.employee = database.ref('users').child(authUser.email) + \"\";\n        }\n      });\n\n      if (this.state.authUserDir === null) {}\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this4 = this;\n\n      auth.onAuthStateChanged(function (authUser) {\n        authUser ? _this4.setState(function () {\n          return {\n            authUser: authUser\n          };\n        }) : _this4.setState(function () {\n          return {\n            authUser: null\n          };\n        });\n      }); //graphRef\n\n      var _this = this; //if(this.state.authUserDir && (this.state.judgeEnrollment != 0)) {\n\n\n      var postsRef1 = database.ref('/arduinoData').orderByValue().limitToLast(1);\n      postsRef1.on('value', function (snapshot) {\n        _this4.setState({\n          graphRef: snapshot.val()\n        });\n      }); // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var graphRef = this.state.graphRef;\n\n      if (graphRef) {\n        var graphList = Object.keys(graphRef).map(function (key, index) {\n          return graphRef[key];\n        });\n      } else var graphList = [];\n\n      var fullData = [{\n        employeeName: this.state.employee,\n        currentTime: graphList\n      }, {\n        employeeName: \"2nd\",\n        currentTime: 20\n      }, {\n        employeeName: \"2nd\",\n        currentTime: 5\n      }];\n      return this.state.authUser ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Headers, {\n        authUser: this.props.authUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, graphList, \" + Welcome\"), React.createElement(Graph, {\n        times: fullData,\n        graphTitle: \"Current Monitoring\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))\n      /*<Layout>\n          <Route  render={(props) => (\n              <Sidebar {...props} /> )}/>\n           <Layout>\n               <Content\n                  style={{ background: '#fff', padding: '24px 24px 24px 35px', margin: 0, minHeight: 280 }}>\n                  <div>\n                      <Switch>\n                          <Route exact path={'/Dashboard'} component={UpcomingList} />\n                       </Switch>\n                  </div>\n              </Content>\n          </Layout>\n      </Layout>*/\n      : React.createElement(Redirect, {\n        to: routes.SIGN_IN,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard; //   <Sidebar grouplist={grouplist}/>\n// <Route exact path={'/Dashboard/forum/newPostDetail'} component={NewPostDetail}/>\n// <Route exact path={'/Dashboard/forum'} component={forum}/>\n// <Route exact path={'/Dashboard/forum/postDetail'} component={PostDetail}/>","map":{"version":3,"sources":["/Users/davidflores/Documents/office-eye/web_app/src/pages/Dashboard.js"],"names":["React","Component","Headers","Layout","Menu","Icon","Button","Link","Redirect","Route","Switch","Router","routes","auth","database","storage","Graph","Sider","Content","Header","Dashboard","props","state","thekey","key","authUser","selectedKey","collapsed","authUserDir","currentUser","graphRef","employee","userDir","ref","child","uid","userRef","onAuthStateChanged","setState","email","_this","postsRef1","orderByValue","limitToLast","on","snapshot","val","graphList","Object","keys","map","index","fullData","employeeName","currentTime","SIGN_IN"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Sidebar from '../components/layout/Sidebar.js';\n//import UpcomingList from '../components/UpcomingList.js';\nimport Headers from './layout/Header.js';\n\nimport '../css/Dashboard.css';\nimport { Layout, Menu, Icon, Button } from 'antd';\nimport {Link, Redirect, Route, Switch, Router} from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport * as routes from \"../router/routes\";\nimport {auth,database,storage} from '../firebase/firebase';\n\nimport Graph from \"../account/graph\"\n\nconst { Sider, Content, Header} = Layout;\nclass Dashboard extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            thekey : this.props.key,\n            //authUser : auth.currentUser,\n            authUser: this.props.authUser,\n            selectedKey: '',\n            collapsed: false,\n            authUserDir: auth.currentUser,\n            graphRef: [],\n            employee: '',\n        };\n        if(this.state.authUserDir){\n            this.userDir = database.ref('/users').child(this.state.authUserDir.uid);\n        }\n        //this.enrolRef = database.ref('/users/'+ this.state.userDir + '/enrollment');\n        this.userRef = database.ref('/users').child('Anonymous');\n    }\n\n    componentDidMount(){\n        auth.onAuthStateChanged((authUser) => {\n            authUser\n                ? this.setState(() => ({ authUser }))\n                : this.setState(() => ({ authUser: null }));\n            if (authUser) {\n                this.userRef = database.ref('users').child(authUser.uid);\n                /*this.enrolRef.on('value',(snapshot) => {\n                    var judgeEnrollment = snapshot.numChildren();\n                    this.setState({judgeEnrollment});\n\n                });*/\n                this.state.employee = database.ref('users').child(authUser.email) + \"\";\n            }\n        })\n\n        if (this.state.authUserDir === null){\n\n        }\n\n    }\n\n    componentWillMount() {\n        auth.onAuthStateChanged(authUser => {\n            authUser\n                ? this.setState(() => ({ authUser }))\n                : this.setState(() => ({ authUser: null }));\n        })\n\n        //graphRef\n        let _this = this;\n        //if(this.state.authUserDir && (this.state.judgeEnrollment != 0)) {\n            let postsRef1 = database.ref('/arduinoData').orderByValue().limitToLast(1);\n\n            postsRef1.on('value', (snapshot) => {\n                this.setState({graphRef: snapshot.val()})\n            });\n       // }\n    }\n\n    render(){\n        let graphRef = this.state.graphRef;\n        if (graphRef){\n            var graphList = Object.keys(graphRef).map(function(key, index) {\n                return  graphRef[key]\n            });\n        }\n        else var graphList = [];\n\n        var fullData = [\n            {\n                employeeName: this.state.employee,\n                currentTime: graphList\n            },\n            {\n                employeeName: \"2nd\",\n                currentTime: 20\n            },\n            {\n                employeeName: \"2nd\",\n                currentTime: 5\n            }\n        ]\n\n        return(\n            this.state.authUser\n                ?(\n                    <div>\n                    <Headers authUser={this.props.authUser}/>\n                    <p>{graphList} + Welcome</p> \n                    <Graph\n                        times={fullData}\n                        graphTitle=\"Current Monitoring\"\n                    />\n                    </div>\n                    /*<Layout>\n                        <Route  render={(props) => (\n                            <Sidebar {...props} /> )}/>\n\n                        <Layout>\n\n                            <Content\n                                style={{ background: '#fff', padding: '24px 24px 24px 35px', margin: 0, minHeight: 280 }}>\n                                <div>\n                                    <Switch>\n                                        <Route exact path={'/Dashboard'} component={UpcomingList} />\n\n                                    </Switch>\n                                </div>\n                            </Content>\n                        </Layout>\n                    </Layout>*/)\n                : (<Redirect to={routes.SIGN_IN}/>)\n\n        )\n    }\n}\n\nexport default Dashboard;\n//   <Sidebar grouplist={grouplist}/>\n// <Route exact path={'/Dashboard/forum/newPostDetail'} component={NewPostDetail}/>\n// <Route exact path={'/Dashboard/forum'} component={forum}/>\n// <Route exact path={'/Dashboard/forum/postDetail'} component={PostDetail}/>\n"]},"metadata":{},"sourceType":"module"}